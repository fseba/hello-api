name: CI Checks
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.18

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Dependencies
        run: go get -v -t ./...

      - name: Run Tests
        run: make test

      - name: Coverage Check
        run: make coverage

      - name: Generate Report
        run: make report

      - name: Copy Files
        run: |
          mkdir reports
          cp cover.html reports/.

      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.18

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        run: make build

      - name: Copy Files
        run: |
          mkdir -p artifacts
          cp api artifacts/.

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: artifacts

  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Still in experimentation phase
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream

